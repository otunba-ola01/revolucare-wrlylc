name: Backend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

env:
  NODE_ENV: test
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/revolucare_test
  REDIS_URL: redis://localhost:6379
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: src/backend
        run: npm ci
      
      - name: Run ESLint
        working-directory: src/backend
        run: npm run lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: src/backend
        run: npm ci
      
      - name: Run TypeScript compiler
        working-directory: src/backend
        run: npm run type-check

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: src/backend
        run: npm ci
      
      - name: Run unit tests
        working-directory: src/backend
        run: npm run test:unit

  integration-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: revolucare_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: src/backend
        run: npm ci
      
      - name: Generate Prisma client
        working-directory: src/backend
        run: npx prisma generate
      
      - name: Run migrations
        working-directory: src/backend
        run: npx prisma migrate deploy
      
      - name: Run integration tests
        working-directory: src/backend
        run: npm run test:integration

  build:
    runs-on: ubuntu-latest
    needs: [lint, type-check, unit-tests, integration-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: src/backend
        run: npm ci
      
      - name: Build application
        working-directory: src/backend
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: src/backend/dist